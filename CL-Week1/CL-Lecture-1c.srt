1
00:00:00,500 --> 00:00:03,375
In the last video,

2
00:00:03,375 --> 00:00:09,555
we presented this
decision tree as a way of

3
00:00:09,555 --> 00:00:13,020
discovering with
yes-no questions which

4
00:00:13,020 --> 00:00:16,650
of the white pieces we're
looking at from a chess set?

5
00:00:16,650 --> 00:00:20,100
This decision tree corresponds

6
00:00:20,100 --> 00:00:22,860
to a variable length encoding of

7
00:00:22,860 --> 00:00:25,460
the kinds of piece

8
00:00:25,460 --> 00:00:29,315
using codes that are
one, three or four bits long.

9
00:00:29,315 --> 00:00:31,010
What we're going to do now is to

10
00:00:31,010 --> 00:00:32,900
go in the opposite direction.

11
00:00:32,900 --> 00:00:34,220
We're going to start with

12
00:00:34,220 --> 00:00:38,345
the code and then draw
the decision tree.

13
00:00:38,345 --> 00:00:41,225
So we're going to look
at another encoding.

14
00:00:41,225 --> 00:00:44,990
If we have three binary bits,

15
00:00:44,990 --> 00:00:47,780
then we can represent
every number from 0,

16
00:00:47,780 --> 00:00:51,140
which is 000, to seven,

17
00:00:51,140 --> 00:00:54,680
which is 111 altogether,
that's eight numbers.

18
00:00:54,680 --> 00:00:55,865
We can represent

19
00:00:55,865 --> 00:00:58,715
eight different patterns
with three bits.

20
00:00:58,715 --> 00:01:00,080
We can choose six of

21
00:01:00,080 --> 00:01:03,905
those patterns to represent
our kinds of piece.

22
00:01:03,905 --> 00:01:05,900
If we look at this encoding,

23
00:01:05,900 --> 00:01:08,705
we can also picture
it as a Venn diagram.

24
00:01:08,705 --> 00:01:12,680
We can say the code is a, b, c,

25
00:01:12,680 --> 00:01:14,525
where the first bit,

26
00:01:14,525 --> 00:01:17,015
the second bit and
the third bit are a,

27
00:01:17,015 --> 00:01:19,880
B, and C. A is a one.

28
00:01:19,880 --> 00:01:21,365
If the first bit is one,

29
00:01:21,365 --> 00:01:24,035
that's if we have
a rock or a royal.

30
00:01:24,035 --> 00:01:26,795
So here we have a rock or a royal,

31
00:01:26,795 --> 00:01:31,475
That's A. B For the
second bit is one.

32
00:01:31,475 --> 00:01:34,145
If we have a bishop or a royal,

33
00:01:34,145 --> 00:01:37,880
B is a bishop or a royal bit,

34
00:01:37,880 --> 00:01:39,620
C is the last bit.

35
00:01:39,620 --> 00:01:41,120
That's true.

36
00:01:41,120 --> 00:01:43,925
If we have a knight or a king,

37
00:01:43,925 --> 00:01:46,100
that it's night or king,

38
00:01:46,100 --> 00:01:49,205
the pawn has no bit set.

39
00:01:49,205 --> 00:01:52,100
So the pawn is encoded by

40
00:01:52,100 --> 00:01:56,330
000 and falls outside
all of the circles.

41
00:01:56,330 --> 00:01:59,195
This Venn diagram
has eight regions.

42
00:01:59,195 --> 00:02:02,765
These two empty regions
are codes we haven't used.

43
00:02:02,765 --> 00:02:08,945
This one is 101 and
this one is 011.

44
00:02:08,945 --> 00:02:10,190
And if you look at it or find

45
00:02:10,190 --> 00:02:12,680
those patterns that are
missing from this list,

46
00:02:12,680 --> 00:02:15,605
we take that encoding.

47
00:02:15,605 --> 00:02:18,020
We can again think
of asking questions,

48
00:02:18,020 --> 00:02:21,800
but now the questions will
be based on the first bit.

49
00:02:21,800 --> 00:02:23,645
Is it true or is it false?

50
00:02:23,645 --> 00:02:26,060
Is it true, or is it false?

51
00:02:26,060 --> 00:02:29,390
Then on the second bit? Is it true
or is it false, and so on.

52
00:02:29,390 --> 00:02:30,815
So we fill that in.

53
00:02:30,815 --> 00:02:35,045
000 gives us the pawn.

54
00:02:35,045 --> 00:02:38,705
001 gives us the knight.

55
00:02:38,705 --> 00:02:42,185
100 gives us the rook.

56
00:02:42,185 --> 00:02:45,650
And 110 gives us the queen.

57
00:02:45,650 --> 00:02:48,880
111 gives us the king.

58
00:02:48,880 --> 00:02:51,200
That straightforward,
just mapping

59
00:02:51,200 --> 00:02:53,480
the code back to a tree.

60
00:02:53,480 --> 00:02:55,460
Now if we take the tree and

61
00:02:55,460 --> 00:02:57,695
try and view it as
a decision tree,

62
00:02:57,695 --> 00:02:59,630
then we don't need
to make a decision

63
00:02:59,630 --> 00:03:01,985
here because by the time
we get to this point,

64
00:03:01,985 --> 00:03:03,635
the only place we can end up

65
00:03:03,635 --> 00:03:05,600
here with the bishop. Over here

66
00:03:05,600 --> 00:03:08,555
we've drawn the tree
again, but this time.

67
00:03:08,555 --> 00:03:11,750
Shortcutting these decisions because

68
00:03:11,750 --> 00:03:13,460
we don't need to
ask any questions

69
00:03:13,460 --> 00:03:16,025
there we know that if
it's a proper code

70
00:03:16,025 --> 00:03:19,730
by this stage will have a
bishop or we'll have a rook.

71
00:03:19,730 --> 00:03:23,000
We can put the questions
in. At the top.

72
00:03:23,000 --> 00:03:26,495
We ask a question which
is true for these three.

73
00:03:26,495 --> 00:03:27,994
That is true.

74
00:03:27,994 --> 00:03:31,910
If we have a major piece
so we ask, is it major?

75
00:03:31,910 --> 00:03:34,100
Then we ask, is it royal?

76
00:03:34,100 --> 00:03:36,245
If it's not royal, it's a rook.

77
00:03:36,245 --> 00:03:39,725
If it is royal than we
ask, is it a king?

78
00:03:39,725 --> 00:03:43,070
And if it's not a
king then its queen,

79
00:03:43,070 --> 00:03:44,975
if it wasn't major,

80
00:03:44,975 --> 00:03:47,030
that we ask, is it a bishop?

81
00:03:47,030 --> 00:03:50,674
If it's not a bishop than
we ask, is it a knight?

82
00:03:50,674 --> 00:03:54,095
If it's not a knight than
we find that it is a pawn.

83
00:03:54,095 --> 00:03:58,400
So this accomplishes
the same task.

84
00:03:58,400 --> 00:04:03,830
It manages to take any piece
and answer a number of yes,

85
00:04:03,830 --> 00:04:09,125
no questions and tell
us what piece it is.

86
00:04:09,125 --> 00:04:11,330
And you might think
this is better

87
00:04:11,330 --> 00:04:14,420
because here we answer
the question about

88
00:04:14,420 --> 00:04:15,890
the king and queen with

89
00:04:15,890 --> 00:04:17,600
three questions instead of

90
00:04:17,600 --> 00:04:19,340
four with our previous encoding.

91
00:04:19,340 --> 00:04:23,750
But if we now count the number
of questions we'll ask if

92
00:04:23,750 --> 00:04:26,000
we classified every piece in

93
00:04:26,000 --> 00:04:28,490
the set or every white
piece in the set.

94
00:04:28,490 --> 00:04:32,870
Then we start off
here with 16 pieces.

95
00:04:32,870 --> 00:04:35,450
The major pieces
well there are four of them.

96
00:04:35,450 --> 00:04:36,650
So four go this way.

97
00:04:36,650 --> 00:04:38,585
The remaining 12 go here.

98
00:04:38,585 --> 00:04:43,745
And we then ask, is it a
bishop that uses two of them?

99
00:04:43,745 --> 00:04:46,025
So the remaining ten go here.

100
00:04:46,025 --> 00:04:48,665
And for these ten, we
ask, is it a knight?

101
00:04:48,665 --> 00:04:50,255
Two of them are knights,

102
00:04:50,255 --> 00:04:52,220
but the rest are pawns
and end up here.

103
00:04:52,220 --> 00:04:53,370
So we have eight pawns,

104
00:04:53,370 --> 00:04:56,885
two knights, two bishops
two kings and as before,

105
00:04:56,885 --> 00:04:58,670
one queen and one king.

106
00:04:58,670 --> 00:05:01,985
And for the bishop and the rook,

107
00:05:01,985 --> 00:05:04,820
we ask two questions.

108
00:05:04,820 --> 00:05:08,690
So there are four of
them with two questions.

109
00:05:08,690 --> 00:05:11,195
For the rest, we
asked three questions

110
00:05:11,195 --> 00:05:13,835
and there are 12 of them
with three questions.

111
00:05:13,835 --> 00:05:15,500
And if we add that together.

112
00:05:15,500 --> 00:05:19,580
That's 36 plus eight
is 44 questions.

113
00:05:19,580 --> 00:05:23,285
So comparing that with what
we did in the previous video,

114
00:05:23,285 --> 00:05:26,420
we find that in the
previous video we had

115
00:05:26,420 --> 00:05:28,880
this decision tree which asked

116
00:05:28,880 --> 00:05:31,730
34 questions when presented
with all the pieces.

117
00:05:31,730 --> 00:05:34,790
And this time we have
this decision tree which

118
00:05:34,790 --> 00:05:38,345
asks 44 questions if you're
presented with all of them.

119
00:05:38,345 --> 00:05:41,720
If we're going to get
randomly given pieces,

120
00:05:41,720 --> 00:05:46,040
randomly with the frequencies
that they occur in chess.

121
00:05:46,040 --> 00:05:47,480
Then this is

122
00:05:47,480 --> 00:05:53,000
a more efficient decision
tree than this one.

123
00:05:53,000 --> 00:05:55,400
Here are a couple of
questions for you to

124
00:05:55,400 --> 00:05:59,030
do after you've finished
looking at the video.

125
00:05:59,030 --> 00:06:01,400
The first one is

126
00:06:01,400 --> 00:06:03,680
just a general
question to which you

127
00:06:03,680 --> 00:06:06,155
will learn the answer if
you don't know it already.

128
00:06:06,155 --> 00:06:08,060
And you really need to have

129
00:06:08,060 --> 00:06:10,565
this answer ingrained in
your head eventually.

130
00:06:10,565 --> 00:06:11,960
So with three bits,

131
00:06:11,960 --> 00:06:13,970
we can encode eight values.

132
00:06:13,970 --> 00:06:15,530
We encoded six values

133
00:06:15,530 --> 00:06:17,360
using three bits but
that left us with

134
00:06:17,360 --> 00:06:19,040
two spare codes that we

135
00:06:19,040 --> 00:06:21,454
could've encoded up
to eight values.

136
00:06:21,454 --> 00:06:25,250
How many bits do we need
to encode n values,

137
00:06:25,250 --> 00:06:28,410
where n is any positive number?

138
00:06:28,750 --> 00:06:30,920
And here's a hint.

139
00:06:30,920 --> 00:06:34,640
What's the binary
representation of 42?

140
00:06:34,640 --> 00:06:39,935
How many bits do we
need to encode 42 values?

141
00:06:39,935 --> 00:06:41,690
If you don't know the
answer, you'll need

142
00:06:41,690 --> 00:06:43,580
to answer this question.

143
00:06:43,580 --> 00:06:46,160
Look at it carefully and then

144
00:06:46,160 --> 00:06:49,620
see how you derive this number.

145
00:06:50,200 --> 00:06:52,670
Another question is, how

146
00:06:52,670 --> 00:06:55,100
many different
encodings are there?

147
00:06:55,100 --> 00:06:58,504
So we'll look at the simplest
example of that question.

148
00:06:58,504 --> 00:07:01,715
Well, the simplest
interesting example is always

149
00:07:01,715 --> 00:07:06,530
encoding two values with one bit.

150
00:07:06,530 --> 00:07:08,810
There are two ways to do it.

151
00:07:08,810 --> 00:07:11,405
You can decide which one's
true and which one's false,

152
00:07:11,405 --> 00:07:13,680
or you can swap them over.

153
00:07:14,370 --> 00:07:18,850
But with three values
we need two bits.

154
00:07:18,850 --> 00:07:21,160
How many ways are
there of encoding

155
00:07:21,160 --> 00:07:24,024
three values using two bits?

156
00:07:24,024 --> 00:07:28,640
Here are two of the ways.

157
00:07:28,860 --> 00:07:31,360
You can check that

158
00:07:31,360 --> 00:07:33,040
the calculation given on

159
00:07:33,040 --> 00:07:35,980
the left gives us
all of the ways.

160
00:07:35,980 --> 00:07:39,910
And now, how many
ways are there of

161
00:07:39,910 --> 00:07:45,010
encoding six values
using three bits,

162
00:07:45,010 --> 00:07:49,550
which is what we just did.
I leave that for you.
